g %>%
ggplot() + geom_sf(color = "grey20") + theme_void()
g %>%
ggplot() + geom_sf(color = "grey10") + theme_void()
g %>%
ggplot() + geom_sf(color = "grey5") + theme_void()
g
#g = st_as_sf(georgia)
#write_sf(g, "data/Georgia.shp")
go = read_sf("data/Georgia.shp") %>%
left_join(d, on = c("Name" = "county_name"))
#g = st_as_sf(georgia)
#write_sf(g, "data/Georgia.shp")
go = read_sf("data/Georgia.shp") %>%
left_join(d, by = c("Name" = "county_name"))
g %>%
ggplot() + geom_sf(aes(fill = death_rate), color = "grey5") + theme_void()
g0 %>%
ggplot() + geom_sf(aes(fill = death_rate), color = "grey5") + theme_void()
go %>%
ggplot() + geom_sf(aes(fill = death_rate), color = "grey5") + theme_void()
pacman::p_load(readxl, dplyr, sf, ggplot2, GISTools, viridis)
go %>%
ggplot() +
geom_sf(aes(fill = death_rate), color = "grey5") +
scale_fill_viridis("magma") +
theme_void()
go %>%
ggplot() +
geom_sf(aes(fill = death_rate), color = "grey5") +
scale_fill_viridis(option = "magma") +
theme_void()
61803398875/2
6.1803398875/2
go
View(go)
list.files("data/")
pacman::p_load(sf, ggplot2)
shp = read_sf("data/Georgia.shp")
d_white = read_excel("data/dph_wq_Birth_Rate_by_Residence__White_1_27_20_05_21_45_601531_PM.xlsx")
pacman::p_load(sf, ggplot2, readxl)
d_white = read_excel("data/dph_wq_Birth_Rate_by_Residence__White_1_27_20_05_21_45_601531_PM.xlsx")
d_black = read_excel("data/dph_wq_Birth_Rate_by_Residence__Black_or_African-American_1_27_20_05_21_58_397429_PM.xlsx")
View(d_white)
pacman::p_load(sf, ggplot2, readxl, dplyr)
pacman::p_load(sf, ggplot2, readxl, dplyr)
d_white = read_excel("data/dph_wq_Birth_Rate_by_Residence__White_1_27_20_05_21_45_601531_PM.xlsx") %>%
slice(3:162) %>%
`colnames<-`(c("County", "Birth_rate_white")) %>%
mutate(death_rate = as.numeric(death_rate))
d_white = read_excel("data/dph_wq_Birth_Rate_by_Residence__White_1_27_20_05_21_45_601531_PM.xlsx") %>%
slice(3:162) %>%
`colnames<-`(c("County", "Birth_rate_white")) %>%
mutate(Birth_rate_white = as.numeric(Birth_rate_white))
d_white = read_excel("data/dph_wq_Birth_Rate_by_Residence__White_1_27_20_05_21_45_601531_PM.xlsx")
d_black = read_excel("data/dph_wq_Birth_Rate_by_Residence__Black_or_African-American_1_27_20_05_21_58_397429_PM.xlsx")
View(d_black)
pacman::p_load(sf, ggplot2, readxl, dplyr)
shp = read_sf("data/Georgia.shp")
d_white = read_excel("data/dph_wq_Birth_Rate_by_Residence__White_1_27_20_05_21_45_601531_PM.xlsx") %>%
slice(3:161) %>%
`colnames<-`(c("County", "Birth_rate_white")) %>%
mutate(Birth_rate_white = as.numeric(Birth_rate_white))
d_black = read_excel("data/dph_wq_Birth_Rate_by_Residence__Black_or_African-American_1_27_20_05_21_58_397429_PM.xlsx") %>%
slice(3:161) %>%
`colnames<-`(c("County", "Birth_rate_black")) %>%
mutate(Birth_rate_black = as.numeric(Birth_rate_black))
go = read_sf("data/Georgia.shp")
go
go = read_sf("data/Georgia.shp") %>%
left_join(d_white, by = c("Name" = "County")) %>%
left_join(d_black, by = c("Name" = "County"))
go
pacman::p_load(highcharter)
hcmap("countries/us/us-go")
hcmap("countries/us/us-ga")
hcmap("countries/us/us-ga-all")
ga = read_sf("data/Georgia.shp") %>%
left_join(d_white, by = c("Name" = "County")) %>%
left_join(d_black, by = c("Name" = "County"))
hcmap("countries/us/us-ga-all", data = ga, value = "Birth_rate_black")
mapdata <- get_data_from_map(download_map_data("countries/us/us-ga-all"))
glimpse(mapdata)
ga
hcmap("countries/us/us-ga-all",
data = d_black,
value = "Birth_rate_black",
joinBy = c("name", "County"))
hcmap("countries/us/us-ga-all",
data = d_black,
value = "Birth_rate_black",
joinBy = c("name", "County"),
name = "fake")
hcmap("countries/us/us-ga-all",
data = d_black,
value = "Birth_rate_black",
joinBy = c("name", "County"),
name = "Black birth rate")
dataLabels = list(enabled = TRUE, format = "{point.name}")
name = "Black birth rate",
hcmap("countries/us/us-ga-all",
data = d_black,
value = "Birth_rate_black",
joinBy = c("name", "County"),
name = "Black birth rate",
dataLabels = list(enabled = TRUE, format = "{point.name}"))
hcmap("countries/us/us-ga-all",
data = d_black,
value = "Birth_rate_black",
joinBy = c("name", "County"),
name = "Black birth rate",
#dataLabels = list(enabled = TRUE, format = "{point.name}"),
borderColor = "#FAFAFA", borderWidth = 0.1)
hcmap("countries/us/us-ga-all",
data = d_black,
value = "Birth_rate_black",
joinBy = c("name", "County"),
name = "Black birth rate",
#dataLabels = list(enabled = TRUE, format = "{point.name}"),
borderColor = "#FAFAFA", borderWidth = 0.5)
hcmap("countries/us/us-ga-all",
data = d_black,
value = "Birth_rate_black",
joinBy = c("name", "County"),
name = "Black birth rate",
#dataLabels = list(enabled = TRUE, format = "{point.name}"),
#borderColor = "#FAFAFA",
borderWidth = 0.5)
hcmap("countries/us/us-ga-all",
data = d_black,
value = "Birth_rate_black",
joinBy = c("name", "County"),
name = "Black birth rate",
#dataLabels = list(enabled = TRUE, format = "{point.name}"),
borderColor = "#FAFAFA",
borderWidth = 0.5)
hcmap("countries/us/us-ga-all",
data = d_black,
value = "Birth_rate_black",
joinBy = c("name", "County"),
name = "Black birth rate",
#dataLabels = list(enabled = TRUE, format = "{point.name}"),
borderColor = "#FAFAFA",
borderWidth = 0.5,
tooltip = list(valueDecimals = 2, valuePrefix = "$", valueSuffix = "USD"))
hcmap("countries/us/us-ga-all",
data = d_black,
value = "Birth_rate_black",
joinBy = c("name", "County"),
name = "Black birth rate",
#dataLabels = list(enabled = TRUE, format = "{point.name}"),
borderColor = "#FAFAFA",
borderWidth = 0.5,
tooltip = list(valueDecimals = 2,
#valuePrefix = "$",
valueSuffix = "%"))
hcmap("countries/us/us-ga-all",
data = d_black,
value = "Birth_rate_black",
joinBy = c("name", "County"),
name = "Black birth rate",
#dataLabels = list(enabled = TRUE, format = "{point.name}"),
#borderColor = "#FAFAFA",
borderColor = "transparent",
borderWidth = 0.5,
tooltip = list(valueDecimals = 2,
#valuePrefix = "$",
valueSuffix = "%"))
hcmap("countries/us/us-ga-all",
data = d_black,
value = "Birth_rate_black",
joinBy = c("name", "County"),
name = "Black birth rate",
#dataLabels = list(enabled = TRUE, format = "{point.name}"),
borderColor = "#FAFAFA",
#borderColor = "transparent",
borderWidth = 0.5,
tooltip = list(valueDecimals = 2,
#valuePrefix = "$",
valueSuffix = "%"))
hcmap("countries/us/us-ga-all",
data = d_black,
value = "Birth_rate_black",
joinBy = c("name", "County"),
name = "Black birth rate",
#dataLabels = list(enabled = TRUE, format = "{point.name}"),
borderColor = "#FAFAFA",
#borderColor = "transparent",
borderWidth = 0.5,
tooltip = list(valueDecimals = 2,
#valuePrefix = "$",
valueSuffix = "%")) %>%
hc_colorAxis(dataClasses = color_classes(c(seq(0, 10, by = 2), 50))) %>%
hc_legend(layout = "vertical", align = "right",
floating = TRUE, valueDecimals = 0, valueSuffix = "%")
hcmap("countries/us/us-ga-all",
data = d_black,
value = "Birth_rate_black",
joinBy = c("name", "County"),
name = "Black birth rate",
#dataLabels = list(enabled = TRUE, format = "{point.name}"),
borderColor = "#FAFAFA",
#borderColor = "transparent",
borderWidth = 0.5,
tooltip = list(valueDecimals = 2,
#valuePrefix = "$",
valueSuffix = "%")) %>%
hc_colorAxis(dataClasses = color_classes(c(seq(0, 10, by = 2), 100))) %>%
hc_legend(layout = "vertical", align = "right",
floating = TRUE, valueDecimals = 0, valueSuffix = "%")
hcmap("countries/us/us-ga-all",
data = d_black,
value = "Birth_rate_black",
joinBy = c("name", "County"),
name = "Black birth rate",
#dataLabels = list(enabled = TRUE, format = "{point.name}"),
borderColor = "#FAFAFA",
#borderColor = "transparent",
borderWidth = 0.5,
tooltip = list(valueDecimals = 2,
#valuePrefix = "$",
valueSuffix = "%")) %>%
hc_colorAxis(dataClasses = color_classes(c(seq(0, 100, by = 10), 10))) %>%
hc_legend(layout = "vertical", align = "right",
floating = TRUE, valueDecimals = 0, valueSuffix = "%")
d_black %>% arrange(-Birth_rate_black)
hcmap("countries/us/us-ga-all",
data = d_black,
value = "Birth_rate_black",
joinBy = c("name", "County"),
name = "Black birth rate",
#dataLabels = list(enabled = TRUE, format = "{point.name}"),
borderColor = "#FAFAFA",
#borderColor = "transparent",
borderWidth = 0.5,
tooltip = list(valueDecimals = 2,
#valuePrefix = "$",
valueSuffix = "%")) %>%
hc_colorAxis(dataClasses = color_classes(c(seq(0, 100, by = 10), 9))) %>%
hc_legend(layout = "vertical", align = "right",
floating = TRUE, valueDecimals = 0, valueSuffix = "%")
seq(0, 100, by = 10)
hcmap("countries/us/us-ga-all",
data = d_black,
value = "Birth_rate_black",
joinBy = c("name", "County"),
name = "Black birth rate",
#dataLabels = list(enabled = TRUE, format = "{point.name}"),
borderColor = "#FAFAFA",
#borderColor = "transparent",
borderWidth = 0.5,
tooltip = list(valueDecimals = 2,
#valuePrefix = "$",
valueSuffix = "%")) %>%
hc_colorAxis(dataClasses = color_classes(seq(0, 100, by = 10))) %>%
hc_legend(layout = "vertical", align = "right",
floating = TRUE, valueDecimals = 0, valueSuffix = "%")
hcmap("countries/us/us-ga-all",
data = d_black,
value = "Birth_rate_black",
joinBy = c("name", "County"),
name = "Black birth rate",
#dataLabels = list(enabled = TRUE, format = "{point.name}"),
borderColor = "#FAFAFA",
#borderColor = "transparent",
borderWidth = 0.5,
tooltip = list(valueDecimals = 2,
#valuePrefix = "$",
valueSuffix = "%")) %>%
hc_colorAxis(dataClasses = color_classes(rev(seq(0, 100, by = 10)))) %>%
hc_legend(layout = "vertical", align = "right",
floating = TRUE, valueDecimals = 0, valueSuffix = "%")
?color_classes
hcmap("countries/us/us-ga-all",
data = d_black,
value = "Birth_rate_black",
joinBy = c("name", "County"),
name = "Black birth rate",
#dataLabels = list(enabled = TRUE, format = "{point.name}"),
borderColor = "#FAFAFA",
#borderColor = "transparent",
borderWidth = 0.5,
tooltip = list(valueDecimals = 2,
#valuePrefix = "$",
valueSuffix = "%")) %>%
hc_colorAxis(dataClasses = color_classes(seq(0, 100, by = 10))) %>%
hc_legend(layout = "vertical", align = "right",
floating = TRUE, valueDecimals = 0, valueSuffix = "%")
hcmap("countries/us/us-ga-all",
data = d_black,
value = "Birth_rate_black",
joinBy = c("name", "County"),
name = "Black birth rate",
#dataLabels = list(enabled = TRUE, format = "{point.name}"),
borderColor = "#FAFAFA",
#borderColor = "transparent",
borderWidth = 0.5,
tooltip = list(valueDecimals = 2,
#valuePrefix = "$",
valueSuffix = "%")) %>%
hc_colorAxis(dataClasses = color_classes(seq(0, 100, by = 20))) %>%
hc_legend(layout = "vertical", align = "right",
floating = TRUE, valueDecimals = 0, valueSuffix = "%")
hcmap("countries/us/us-ga-all",
data = d_black,
value = "Birth_rate_black",
joinBy = c("name", "County"),
name = "Black birth rate",
#dataLabels = list(enabled = TRUE, format = "{point.name}"),
borderColor = "#FAFAFA",
#borderColor = "transparent",
borderWidth = 0.5,
tooltip = list(valueDecimals = 2,
#valuePrefix = "$",
valueSuffix = "%")) %>%
hc_colorAxis(dataClasses = color_classes(seq(0, 80, by = 20))) %>%
hc_legend(layout = "vertical", align = "right",
floating = TRUE, valueDecimals = 0, valueSuffix = "%")
hcmap("countries/us/us-ga-all",
data = d_black,
value = "Birth_rate_black",
joinBy = c("name", "County"),
name = "Black birth rate",
#dataLabels = list(enabled = TRUE, format = "{point.name}"),
borderColor = "#FAFAFA",
#borderColor = "transparent",
borderWidth = 0.5,
tooltip = list(valueDecimals = 2,
#valuePrefix = "$",
valueSuffix = "%")) %>%
hc_colorAxis(dataClasses = color_classes(seq(0, 80, by = 10))) %>%
hc_legend(layout = "vertical", align = "right",
floating = TRUE, valueDecimals = 0, valueSuffix = "%")
pacman::p_load(sf, ggplot2, readxl, dplyr, highcharter)
hcmap("countries/cn/custom/cn-all-sar-taiwan",
#data = d_white,
#value = "Birth_rate_white",
#joinBy = c("name", "County"),
name = "White birth rate",
borderColor = "#FAFAFA",
borderWidth = 0.5,
tooltip = list(valueDecimals = 2,
valueSuffix = "%")) %>%
hc_colorAxis(dataClasses = color_classes(seq(0, 100, by = 10))) %>%
hc_legend(layout = "vertical", align = "right",
floating = TRUE, valueDecimals = 0, valueSuffix = "%") %>%
hc_title(text = "Birth rates for mothers in Georgia, USA, 2018") %>%
hc_subtitle(text = "Georgia Department of Public Health's Data Warehouse") %>%
hc_add_theme(hc_theme_ft())
hcmap("countries/cn/custom/cn-all-sar-taiwan",
#data = d_white,
#value = "Birth_rate_white",
#joinBy = c("name", "County"),
name = "White birth rate",
borderColor = "#FAFAFA",
borderWidth = 0.5,
tooltip = list(valueDecimals = 2,
valueSuffix = "%")) %>%
#hc_colorAxis(dataClasses = color_classes(seq(0, 100, by = 10))) %>%
hc_legend(layout = "vertical", align = "right",
floating = TRUE, valueDecimals = 0, valueSuffix = "%") %>%
hc_title(text = "Birth rates for mothers in Georgia, USA, 2018") %>%
hc_subtitle(text = "Georgia Department of Public Health's Data Warehouse") %>%
hc_add_theme(hc_theme_ft())
hcmap("countries/cn/custom/cn-all-sar-taiwan",
#data = d_white,
#value = "Birth_rate_white",
#joinBy = c("name", "County"),
name = "White birth rate",
borderColor = "grey",
borderWidth = 0.5,
tooltip = list(valueDecimals = 2,
valueSuffix = "%")) %>%
#hc_colorAxis(dataClasses = color_classes(seq(0, 100, by = 10))) %>%
hc_legend(layout = "vertical", align = "right",
floating = TRUE, valueDecimals = 0, valueSuffix = "%") %>%
hc_title(text = "Birth rates for mothers in Georgia, USA, 2018") %>%
hc_subtitle(text = "Georgia Department of Public Health's Data Warehouse") %>%
hc_add_theme(hc_theme_ft())
p = hcmap("countries/cn/custom/cn-all-sar-taiwan",
#data = d_white,
#value = "Birth_rate_white",
#joinBy = c("name", "County"),
name = "White birth rate",
borderColor = "grey",
borderWidth = 0.5,
tooltip = list(valueDecimals = 2,
valueSuffix = "%")) %>%
#hc_colorAxis(dataClasses = color_classes(seq(0, 100, by = 10))) %>%
hc_legend(layout = "vertical", align = "right",
floating = TRUE, valueDecimals = 0, valueSuffix = "%") %>%
hc_title(text = "Birth rates for mothers in Georgia, USA, 2018") %>%
hc_subtitle(text = "Georgia Department of Public Health's Data Warehouse") %>%
hc_add_theme(hc_theme_ft())
class(p)
get_data_from_map(download_map_data("countries/cn/custom/cn-all-sar-taiwan"))
cn = get_data_from_map(download_map_data("countries/cn/custom/cn-all-sar-taiwan"))
class(cn)
cn
cn1 = cn %>%
mutate(value_2_map = rnorm(n(), 0, 1))
p = hcmap("countries/cn/custom/cn-all-sar-taiwan",
data = cn1,
value = "value_2_map",
joinBy = c("hc-key", "hc-key"),
name = "random data",
borderColor = "grey",
borderWidth = 0.5,
tooltip = list(valueDecimals = 2,
valueSuffix = "%")) %>%
#hc_colorAxis(dataClasses = color_classes(seq(0, 100, by = 10))) %>%
hc_legend(layout = "vertical", align = "right",
floating = TRUE, valueDecimals = 0, valueSuffix = "%") %>%
hc_title(text = "A demonstration of provinces in China") %>%
hc_subtitle(text = "Georgia Department of Public Health's Data Warehouse") %>%
hc_add_theme(hc_theme_ft())
p
p = hcmap("countries/cn/custom/cn-all-sar-taiwan",
data = cn1,
value = "value_2_map",
joinBy = c("hc-key", "hc-key"),
name = "random data",
borderColor = "grey",
borderWidth = 0.5,
tooltip = list(valueDecimals = 2,
valueSuffix = "%"),
dataLabels = list(enabled = TRUE, format = '{point.name}')) %>%
hc_colorAxis(dataClasses = color_classes(seq(0, 100, by = 10))) %>%
hc_legend(layout = "vertical", align = "right",
floating = TRUE, valueDecimals = 0, valueSuffix = "%") %>%
hc_title(text = "A demonstration of provinces in China") %>%
hc_subtitle(text = "Georgia Department of Public Health's Data Warehouse") %>%
hc_add_theme(hc_theme_ft())
p
cn1
hist(cn1$value_2_map)
p = hcmap("countries/cn/custom/cn-all-sar-taiwan",
data = cn1,
value = "value_2_map",
joinBy = c("hc-key", "hc-key"),
name = "random data",
borderColor = "grey",
borderWidth = 0.5,
tooltip = list(valueDecimals = 2,
valueSuffix = "%"),
dataLabels = list(enabled = TRUE, format = '{point.name}')) %>%
hc_colorAxis(dataClasses = color_classes(seq(-2, 2, by = 0.5))) %>%
hc_legend(layout = "vertical", align = "right",
floating = TRUE, valueDecimals = 0, valueSuffix = "%") %>%
hc_title(text = "A demonstration of provinces in China") %>%
hc_subtitle(text = "Georgia Department of Public Health's Data Warehouse") %>%
hc_add_theme(hc_theme_ft())
p
install.packages("OpenStreetMap")
####
#### 3.4  tmap
####
#### 3.4.2  Quick tmap using  qtm
georgia_sf = sf::read_sf("data/Georgia.shp")
library( tmap )
windows( 9 , 9 )
t2 = tm_shape( georgia ) +
tm_fill("darkmagenta") +
tm_borders() +
tm_layout( bg.color="gray85" , asp=0.86 ) +
tm_layout( title="Georgia in sp Format" ,
title.size=1.5 ,
title.position=c(0.54,"top"))
windows( 9 , 9 )
t1 = tm_shape( georgia_sf ) +
tm_fill( "coral" ) +
tm_borders() +
tm_layout( bg.color="gray85" ,
title="Georgia in sf Format" ,
title.size=1.5 ,
title.position=c(0.54,"top") )
t1
pushViewport( viewport( layout=grid.layout(1,2) ) )
library( grid )   ## for combining plots (par(mfrow=..)) doesn't work
windows( 12 , 7 )
grid.newpage()
pushViewport( viewport( layout=grid.layout(1,2) ) )
print( t1 , vp=viewport( layout.pos.col=1 , height=5 ) )
print( t2 , vp=viewport( layout.pos.col=2 , height=5 ) )
t2 = tm_shape( georgia ) +
tm_fill("darkmagenta") +
tm_borders() +
tm_layout( bg.color="gray85" , asp=0.86 ) +
tm_layout( title="Georgia in sp Format" ,
title.size=1.5 ,
title.position=c(0.54,"top"))
g = st_union( georgia_sf )   ## Outline of the state of Georgia
plot( g )
?st_union
g = st_combine( georgia_sf )   ## Outline of the state of Georgia
plot( g )
plot( georgia_sf )
g = st_union( georgia_sf )   ## Outline of the state of Georgia
plot( g )
?windows
windows( 9 , 9 )
t1 = tm_shape( georgia_sf ) +
tm_fill( "coral" ) +
tm_borders() +
tm_layout( bg.color="gray85" ,
title="Georgia in sf Format" ,
title.size=1.5 ,
title.position=c(0.54,"top") )
class(t1)
methods(glm)
georgia_sf
?index
